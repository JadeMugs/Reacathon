{
    "openapi": "3.0.2",
    "info": {
        "title": "API Title",
        "version": "1.0"
    },
    "servers": [{ "url": "https://api.server.test/v1" }],
    "components": {
        "schemas": {
            "LoginData": {
                "properties": {
                    "username": {
                        "type": "string",
                        "example": "John_Doe"
                    },
                    "password": {
                        "type": "string",
                        "example": "ak*f3o5jsn@9fF"
                    }
                }
            },
            "Badge": {
                "type": "object",
                "properties": {
                    "win": {
                        "type": "number",
                        "example": 3
                    },
                    "participation": {
                        "type": "number",
                        "example": 3
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "example": "John_Doe"
                    },
                    "password": {
                        "type": "string",
                        "example": "ak*f3o5jsn@9fF"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "funny_email@gmail.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": ["CLIENT", "ORGANIZATION"],
                        "example": "ORGANIZATION"
                    },
                    "badge": {
                        "type": "object",
                        "$ref": "#/components/schemas/Badge"
                    }
                }
            },
            "Prize": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "example": 3000
                    },
                    "extra": {
                        "type": "string",
                        "example": "Ci sarà anche un buono amazon da 50 euro!"
                    }
                }
            },
            "Location": {
                "type": "object",
                "properties": {
                    "street": {
                        "type": "string"
                    },
                    "number": {
                        "type": "number"
                    },
                    "city": {
                        "type": "string"
                    },
                    "province": {
                        "type": "string"
                    },
                    "district": {
                        "type": "string",
                        "description": "regione"
                    },
                    "country": {
                        "type": "string"
                    },
                    "zip_code": {
                        "type": "number"
                    },
                    "lat": {
                        "type": "number"
                    },
                    "long": {
                        "type": "number"
                    }
                }
            },
            "HackathonStatus": {
                "type": "string",
                "enum": ["pending", "started", "finished"]
            },
            "Hackathon": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Nome_Hackathon"
                    },
                    "description": {
                        "type": "string",
                        "example": "Questo hackathon salverà il mondo."
                    },
                    "organization": {
                        "type": "object",
                        "$ref": "#/components/schemas/User"
                    },
                    "attendants": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-07-21T17:32:28Z"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-07-21T17:32:28Z"
                    },
                    "status": {
                        "type": "string",
                        "$ref": "#/components/schemas/HackathonStatus"
                    },
                    "location": {
                        "type": "object",
                        "$ref": "#/components/schemas/Location"
                    },
                    "prize": {
                        "type": "object",
                        "$ref": "#/components/schemas/Prize"
                    }
                }
            }
        }
    },
    "paths": {
        "/login": {
            "post": {
                "description": "Authenticate the user.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Signup the user.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Logout the user and destroy the current session. No data are required.",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/exist": {
            "get": {
                "description": "Check if a username has been already taken.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "example": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Check if a username has been already taken.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "User detail with skills, badges.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/hackathons": {
            "get": {
                "description": "Returns hackathons matching the given params.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "city",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "province",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "district",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "country",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "from",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "to",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "$ref": "#/components/schemas/HackathonStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "$ref": "#/components/schemas/Hackathon"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create or update a hackathon. The new hackathon is returned into the response.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Hackathon"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Hackathon"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/hackathons/{id}": {
            "get": {
                "description": "Hackathon detail.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Hackathon"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Execute an action to change the hackathon status. Status can be changed only from pending to finished, this means that a started hackathon can't be reverted back to pending.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "action",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": ["start", "finish"]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Hackathon"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
